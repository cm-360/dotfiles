# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}:
{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "nvme"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  boot.initrd.luks.devices."cryptroot" = {
    device = "/dev/disk/by-label/NixOS-luks";
    allowDiscards = true;
  };

  # https://nixos.wiki/wiki/Full_Disk_Encryption
  # https://wiki.archlinux.org/title/Dm-crypt/Device_encryption
  # https://gist.github.com/MaxXor/ba1665f47d56c24018a943bb114640d7
  environment.etc.crypttab = {
    mode = "0600";
    text = ''
      # <volume-name> <encrypted-device> [key-file] [options]
      cryptdata0 UUID=4368b300-921a-462b-bdc3-79259eca4615 /etc/cryptdata.key luks,noearly,discard
      cryptdata1 UUID=5ae6aa77-f597-4c55-8dbb-f36b3c044689 /etc/cryptdata.key luks,noearly,discard
    '';
  };

  fileSystems."/" = {
    device = "/dev/disk/by-label/NixOS";
    fsType = "btrfs";
    options = [ "subvol=@" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-label/EFI";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/data" = {
    device = "/dev/vg-data/data";
    fsType = "btrfs";
  };

  fileSystems."/virt" = {
    device = "/dev/vg-data/virt";
    fsType = "ext4";
  };

  swapDevices = [
    {
      device = "/dev/disk/by-partuuid/d63e663f-dbc0-47d6-ab42-b68d3495a111";
      randomEncryption.enable = true;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp63s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp64s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
